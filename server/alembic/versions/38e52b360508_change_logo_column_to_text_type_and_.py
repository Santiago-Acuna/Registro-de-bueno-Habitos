"""Change logo column to Text type and give unique property to name column

Revision ID: 38e52b360508
Revises: 
Create Date: 2024-11-05 15:50:56.453113

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '38e52b360508'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'actions', ['id'])
    op.create_unique_constraint(None, 'books', ['id'])
    op.alter_column('habits', 'logo',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Text(),
               existing_nullable=False)
    op.create_unique_constraint(None, 'habits', ['name'])
    op.create_unique_constraint(None, 'habits', ['id'])
    op.create_unique_constraint(None, 'reading_logs', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'reading_logs', type_='unique')
    op.drop_constraint(None, 'habits', type_='unique')
    op.drop_constraint(None, 'habits', type_='unique')
    op.alter_column('habits', 'logo',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_constraint(None, 'books', type_='unique')
    op.drop_constraint(None, 'actions', type_='unique')
    # ### end Alembic commands ###
